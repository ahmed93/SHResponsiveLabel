{"name":"SHResponsiveLabel","tagline":"UILabel subclass written in Swift that supports clickable custom truncation token as well as supports pattern highlighting","body":"###Features\r\n1. It can detect pattern specified by regular expression and apply style like font, color etc.\r\n2. It allows to replace default ellipse with tapable attributed string to mark truncation\r\n3. Convenience methods are provided to detect hashtags, username handler and URLs\r\n\r\n###Installation\r\nAdd following lines in your pod file  \r\npod 'SHResponsiveLabel', '~> 1.0.1'\r\n\r\n###Usage\r\nThe following snippets explain the usage of public methods. These snippets assume an instance of ResponsiveLabel named \"customLabel\".\r\n#### Pattern Detection\r\n```\r\n//Detects email in text\r\nlet emailRegexString = \"A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,64}\"\r\nvar error = NSErrorPointer()\r\nlet regex = NSRegularExpression(pattern: emailRegexString,\r\n                                options: NSRegularExpressionOptions.allZeros, \r\n                                  error: error)\r\nlet descriptor = PatternDescriptor(regularExpression: regex!, \r\n                                          searchType: PatternSearchType.All,\r\n                                   patternAttributes:[NSForegroundColorAttributeName:UIColor.redColor()])\r\ncustomLabel.enablePatternDetection(descriptor)\r\n```\r\n\r\n#### String Detection\r\n```\r\n//Detect the word \"text\"\r\nlet tapResponder = PatternTapResponder { (tappedString) -> (Void) in\r\n      println(\"tapped = \"+tappedString)\r\n}\r\nlet attributes = [NSForegroundColorAttributeName:UIColor.brownColor(),\r\n                     RLTapResponderAttributeName:action as AnyObject]\r\nself.customLabel.enableStringDetection(\"text\", dictionary:attributes)\r\n```\r\n#### Array of String Detection\r\n```\r\n//Detect the word \"text\" and \"some\"\r\nlet tapResponder = PatternTapResponder { (tappedString) -> (Void) in\r\n   println(\"tapped = \"+tappedString)\r\n}\r\nlet attributes = [NSForegroundColorAttributeName:UIColor.brownColor(),\r\n                     RLTapResponderAttributeName:action as AnyObject]\r\nself.customLabel.enableDetectionForStrings([\"text\",\"some\"], dictionary: attributes)\r\n```\r\n#### HashTag Detection\r\n```\r\nlet hashtagTapAction = PatternTapResponder { (tappedString) -> (Void) in\r\n  println(\"Hashtag Tapped = \"+tappedString)\r\n }\r\nself.customLabel.enableHashTagDetection([NSForegroundColorAttributeName:UIColor.redColor(),\r\n                                            RLTapResponderAttributeName:hashtagTapAction])\r\n```   \r\n#### Username Handle Detection\r\n```\r\nlet userhandleTapAction = PatternTapResponder { (tappedString) -> (Void) in\r\n  println(\"Username Handle Tapped = \" + tappedString)\r\n}\r\nself.customLabel.enableUserHandleDetection([NSForegroundColorAttributeName:UIColor.grayColor(),\r\n                                               RLTapResponderAttributeName:userhandleTapAction])\r\n```\r\n#### URL Detection\r\n```\r\nlet urlTapAction  = PatternTapResponder { (tappedString) -> (Void) in\r\n  println(\"URL Tapped = \" + tappedString)\r\n}\r\nself.customLabel.enableURLDetection([NSForegroundColorAttributeName:UIColor.cyanColor(),\r\n                                      NSUnderlineStyleAttributeName:0,\r\n                                        RLTapResponderAttributeName:urlTapAction])\r\n```\r\n#### Highlight Patterns On Tap\r\nTo highlight patterns, one can set the attributes:\r\n* RLHighlightedForegroundColorAttributeName\r\n* RLHighlightedBackgroundColorAttributeName\r\n\r\n```\r\nlet userhandleTapAction = PatternTapResponder { (tappedString) -> (Void) in\r\n  println(\"Username Handle Tapped = \" + tappedString)\r\n}\r\nself.customLabel.enableUserHandleDetection([NSForegroundColorAttributeName:UIColor.grayColor(),                                                              RLHighlightedForegroundColorAttributeName:UIColor.greenColor(),\r\n                                 RLHighlightedBackgroundColorAttributeName:UIColor.blackColor(),\r\n                                               RLTapResponderAttributeName:userhandleTapAction])\r\n```\r\n#### Custom Truncation Token\r\n##### Set attributed string as truncation token\r\n```\r\nlet token = NSAttributedString(string: \"...More\",\r\n                            attributes: [NSFontAttributeName:self.customLabel.font,\r\n                              NSForegroundColorAttributeName:UIColor.blueColor(),\r\n                   RLHighlightedBackgroundColorAttributeName:UIColor.blackColor(),\r\n                   RLHighlightedForegroundColorAttributeName:UIColor.greenColor()])\r\ncustomLabel.setAttributedTruncationToken(token, action: action)\r\n```","google":"UA-65986615-1","note":"Don't delete this file! It's used internally to help with page regeneration."}